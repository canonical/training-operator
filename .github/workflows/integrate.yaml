# reusable workflow triggered by other actions
name: CI

on:
  workflow_call:
    secrets:
      CHARMCRAFT_CREDENTIALS:
        required: true

jobs:
  lib-check:
    name: Check libraries
    uses: canonical/charmed-kubeflow-workflows/.github/workflows/_quality-checks.yaml@main
    secrets: inherit
    with:
        charm-path: "."

  lint:
    name: Lint
    runs-on: ubuntu-20.04
    steps:
    - name: Check out code
      uses: actions/checkout@v3

    - name: Install dependencies
      run: pip install tox

    - name: Lint code
      run: tox -vve lint

  unit-test:
    name: Unit
    runs-on: ubuntu-20.04
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Install dependencies
        run: pip install tox

      - name: Run unit tests
        run: tox -e unit

      - name: Upload coverage artifacts
        uses: actions/upload-artifact@v3
        with:
          name: coverage
          path: training-operator-cov_html
        if: failure()

  integration-test:
    name: Integration
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        tox-environments:
          - charm-integration
          - integration-with-profiles
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Setup operator environment
        uses: charmed-kubernetes/actions-operator@main
        with:
          provider: microk8s
          channel: 1.25-strict/stable
          microk8s-addons: "dns hostpath-storage rbac metallb:10.64.140.43-10.64.140.49"
          charmcraft-channel: latest/stable
          juju-channel: 3.1/stable

      - name: Run integration tests
        run: sg snap_microk8s -c "tox -e ${{ matrix.tox-environments }} -- --model testing"


      - name: Capture k8s resources on failure
        run: |
          set -eux
          kubectl get all -A
          kubectl get pods -n testing --show-labels
          kubectl get crds
        if: failure()

      - name: Get juju status
        run: juju status
        if: failure()

      - name: Get workload logs
        run: kubectl logs --tail 100 -ntesting -lapp.kubernetes.io/name=training-operator -ccharm
        if: failure()

      - name: Get operator logs
        run: kubectl logs --tail 100 -ntesting -lapp.kubernetes.io/name=training-operator -ctraining-operator
        if: failure()
