apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: {{ namespace }}-{{ app_name }}
  name: {{ app_name }}
  namespace: {{ namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: {{ namespace }}-{{ app_name }}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
      labels:
        control-plane: {{ namespace }}-{{ app_name }}
        # Use this label so the training operator Pod can use the juju created Service
        app.kubernetes.io/name: {{ app_name }}
    spec:
      containers:
      - command:
        - /manager
        env:
        - name: MY_POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        image: {{ training_operator_image }}
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
          timeoutSeconds: 3
        name: {{ app_name }}
        ports:
        - containerPort: {{ metrics_port }}
        - containerPort: {{ webhook_port }}
          name: webhook-server
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 10
          periodSeconds: 15
          timeoutSeconds: 3
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      serviceAccountName: {{ app_name }}-workload
      terminationGracePeriodSeconds: 10
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: training-operator-webhook-cert
